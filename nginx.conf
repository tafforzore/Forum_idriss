server {
    listen 8000;
    server_name localhost;
    root /var/www/html/View;
    index index.php index.html index.htm;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # FICHIERS STATIQUES - Doit être AVANT la location PHP
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|webp|woff|woff2|ttf|eot|otf|mp4|webm|ogg|mp3|wav|flac|pdf|doc|docx|xls|xlsx|ppt|pptx|zip|rar|tar|gz|7z)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        try_files $uri $uri/ =404;
        access_log off;
        log_not_found off;
        
        # Sécurité
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options "SAMEORIGIN";
    }

    # HTML statique
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        try_files $uri $uri/ =404;
    }

    # Configuration PHP - IMPORTANT: après les fichiers statiques
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        
        # Optimisations
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_connect_timeout 60s;
        fastcgi_read_timeout 60s;
        
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # Configuration par défaut
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        
        # Sécurité
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
    }

    # Blocage des fichiers sensibles
    location ~ /\.(ht|env|git) {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # Favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        expires max;
    }

    # Robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
        expires max;
    }

    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Gestion des erreurs
    error_page 404 /index.php;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /var/www/html/View;
        internal;
    }
}